// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GoodsInfo.proto

#include "GoodsInfo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Resource {
constexpr GoodsInfo_Price::GoodsInfo_Price(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : price_dq_(0u)
  , price_gold_(0u)
  , price_value_(0u){}
struct GoodsInfo_PriceDefaultTypeInternal {
  constexpr GoodsInfo_PriceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GoodsInfo_PriceDefaultTypeInternal() {}
  union {
    GoodsInfo_Price _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GoodsInfo_PriceDefaultTypeInternal _GoodsInfo_Price_default_instance_;
constexpr GoodsInfo_GoodsAttr::GoodsInfo_GoodsAttr(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : attr_type_(0u)
  , attr_value_(0u){}
struct GoodsInfo_GoodsAttrDefaultTypeInternal {
  constexpr GoodsInfo_GoodsAttrDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GoodsInfo_GoodsAttrDefaultTypeInternal() {}
  union {
    GoodsInfo_GoodsAttr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GoodsInfo_GoodsAttrDefaultTypeInternal _GoodsInfo_GoodsAttr_default_instance_;
constexpr GoodsInfo::GoodsInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : privileged_plat_id_list_()
  , _privileged_plat_id_list_cached_byte_size_(0)
  , price_table_()
  , goods_attr_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , online_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , offline_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , valid_time_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subsystemid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , goods_id_(0u)
  , sex_(0u)
  , level_limit_(0u)
  , club_vip_level_(0)
  , qb_2_(0)
  , consume_type_(0u)
  , time_unit_(0u)
  , is_online_(0u)
  , can_buy_(0u)
  , can_recharge_(0u)
  , privileged_plat_is_online_(0u)
  , privileged_plat_can_buy_(0u)
  , privileged_plat_can_recharge_(0u)
  , payment_terms_(0u)
  , sort_priority_(0u)
  , suit_number_(0)
  , bag_sort_priority_(0u)
  , rank_(0u)
  , price_discount_(0u)
  , vip_discount_(0u)
  , limit_id_(0u){}
struct GoodsInfoDefaultTypeInternal {
  constexpr GoodsInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GoodsInfoDefaultTypeInternal() {}
  union {
    GoodsInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GoodsInfoDefaultTypeInternal _GoodsInfo_default_instance_;
constexpr GoodsInfo_ARRAY::GoodsInfo_ARRAY(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct GoodsInfo_ARRAYDefaultTypeInternal {
  constexpr GoodsInfo_ARRAYDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GoodsInfo_ARRAYDefaultTypeInternal() {}
  union {
    GoodsInfo_ARRAY _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GoodsInfo_ARRAYDefaultTypeInternal _GoodsInfo_ARRAY_default_instance_;
}  // namespace Resource
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_GoodsInfo_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_GoodsInfo_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_GoodsInfo_2eproto = nullptr;

const uint32_t TableStruct_GoodsInfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_Price, price_dq_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_Price, price_gold_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_Price, price_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_GoodsAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_GoodsAttr, attr_type_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_GoodsAttr, attr_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, goods_id_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, name_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, sex_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, level_limit_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, club_vip_level_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, qb_2_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, consume_type_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, time_unit_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, is_online_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, can_buy_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, can_recharge_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, online_time_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, offline_time_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, privileged_plat_id_list_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, privileged_plat_is_online_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, privileged_plat_can_buy_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, privileged_plat_can_recharge_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, payment_terms_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, valid_time_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, sort_priority_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, suit_number_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, bag_sort_priority_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, status_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, rank_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, price_discount_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, vip_discount_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, price_table_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, goods_attr_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, description_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, limit_id_),
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo, subsystemid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_ARRAY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Resource::GoodsInfo_ARRAY, items_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Resource::GoodsInfo_Price)},
  { 9, -1, -1, sizeof(::Resource::GoodsInfo_GoodsAttr)},
  { 17, -1, -1, sizeof(::Resource::GoodsInfo)},
  { 54, -1, -1, sizeof(::Resource::GoodsInfo_ARRAY)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Resource::_GoodsInfo_Price_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Resource::_GoodsInfo_GoodsAttr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Resource::_GoodsInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Resource::_GoodsInfo_ARRAY_default_instance_),
};

const char descriptor_table_protodef_GoodsInfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017GoodsInfo.proto\022\010Resource\"\341\006\n\tGoodsInf"
  "o\022\020\n\010goods_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\014\022\013\n\003sex"
  "\030\003 \001(\r\022\023\n\013level_limit\030\004 \001(\r\022\026\n\016club_vip_"
  "level\030\005 \001(\005\022\014\n\004qb_2\030\006 \001(\005\022\024\n\014consume_typ"
  "e\030\007 \001(\r\022\021\n\ttime_unit\030\010 \001(\r\022\021\n\tis_online\030"
  "\t \001(\r\022\017\n\007can_buy\030\n \001(\r\022\024\n\014can_recharge\030\013"
  " \001(\r\022\023\n\013online_time\030\014 \001(\014\022\024\n\014offline_tim"
  "e\030\r \001(\014\022\037\n\027privileged_plat_id_list\030\016 \003(\r"
  "\022!\n\031privileged_plat_is_online\030\017 \001(\r\022\037\n\027p"
  "rivileged_plat_can_buy\030\020 \001(\r\022$\n\034privileg"
  "ed_plat_can_recharge\030\021 \001(\r\022\025\n\rpayment_te"
  "rms\030\022 \001(\r\022\022\n\nvalid_time\030\023 \001(\014\022\025\n\rsort_pr"
  "iority\030\024 \001(\r\022\023\n\013suit_number\030\025 \001(\005\022\031\n\021bag"
  "_sort_priority\030\026 \001(\r\022\016\n\006status\030\027 \001(\014\022\014\n\004"
  "rank\030\030 \001(\r\022\026\n\016price_discount\030\031 \001(\r\022\024\n\014vi"
  "p_discount\030\032 \001(\r\022.\n\013price_table\030\033 \003(\0132\031."
  "Resource.GoodsInfo.Price\0221\n\ngoods_attr\030\034"
  " \003(\0132\035.Resource.GoodsInfo.GoodsAttr\022\023\n\013d"
  "escription\030\035 \001(\014\022\020\n\010limit_id\030\036 \001(\r\022\023\n\013su"
  "bSystemId\030\037 \001(\014\032B\n\005Price\022\020\n\010price_dq\030\001 \001"
  "(\r\022\022\n\nprice_gold\030\002 \001(\r\022\023\n\013price_value\030\003 "
  "\001(\r\0322\n\tGoodsAttr\022\021\n\tattr_type\030\001 \001(\r\022\022\n\na"
  "ttr_value\030\002 \001(\r\"5\n\017GoodsInfo_ARRAY\022\"\n\005it"
  "ems\030\001 \003(\0132\023.Resource.GoodsInfob\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_GoodsInfo_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_GoodsInfo_2eproto = {
  false, false, 958, descriptor_table_protodef_GoodsInfo_2eproto, "GoodsInfo.proto", 
  &descriptor_table_GoodsInfo_2eproto_once, nullptr, 0, 4,
  schemas, file_default_instances, TableStruct_GoodsInfo_2eproto::offsets,
  file_level_metadata_GoodsInfo_2eproto, file_level_enum_descriptors_GoodsInfo_2eproto, file_level_service_descriptors_GoodsInfo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_GoodsInfo_2eproto_getter() {
  return &descriptor_table_GoodsInfo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_GoodsInfo_2eproto(&descriptor_table_GoodsInfo_2eproto);
namespace Resource {

// ===================================================================

class GoodsInfo_Price::_Internal {
 public:
};

GoodsInfo_Price::GoodsInfo_Price(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Resource.GoodsInfo.Price)
}
GoodsInfo_Price::GoodsInfo_Price(const GoodsInfo_Price& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&price_dq_, &from.price_dq_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_value_) -
    reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  // @@protoc_insertion_point(copy_constructor:Resource.GoodsInfo.Price)
}

inline void GoodsInfo_Price::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&price_dq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&price_value_) -
    reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
}

GoodsInfo_Price::~GoodsInfo_Price() {
  // @@protoc_insertion_point(destructor:Resource.GoodsInfo.Price)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GoodsInfo_Price::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GoodsInfo_Price::ArenaDtor(void* object) {
  GoodsInfo_Price* _this = reinterpret_cast< GoodsInfo_Price* >(object);
  (void)_this;
}
void GoodsInfo_Price::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoodsInfo_Price::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GoodsInfo_Price::Clear() {
// @@protoc_insertion_point(message_clear_start:Resource.GoodsInfo.Price)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&price_dq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_value_) -
      reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoodsInfo_Price::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 price_dq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          price_dq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 price_gold = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          price_gold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 price_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          price_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GoodsInfo_Price::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Resource.GoodsInfo.Price)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 price_dq = 1;
  if (this->_internal_price_dq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_price_dq(), target);
  }

  // uint32 price_gold = 2;
  if (this->_internal_price_gold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_price_gold(), target);
  }

  // uint32 price_value = 3;
  if (this->_internal_price_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_price_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Resource.GoodsInfo.Price)
  return target;
}

size_t GoodsInfo_Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Resource.GoodsInfo.Price)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 price_dq = 1;
  if (this->_internal_price_dq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_price_dq());
  }

  // uint32 price_gold = 2;
  if (this->_internal_price_gold() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_price_gold());
  }

  // uint32 price_value = 3;
  if (this->_internal_price_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_price_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoodsInfo_Price::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GoodsInfo_Price::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoodsInfo_Price::GetClassData() const { return &_class_data_; }

void GoodsInfo_Price::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GoodsInfo_Price *>(to)->MergeFrom(
      static_cast<const GoodsInfo_Price &>(from));
}


void GoodsInfo_Price::MergeFrom(const GoodsInfo_Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Resource.GoodsInfo.Price)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_price_dq() != 0) {
    _internal_set_price_dq(from._internal_price_dq());
  }
  if (from._internal_price_gold() != 0) {
    _internal_set_price_gold(from._internal_price_gold());
  }
  if (from._internal_price_value() != 0) {
    _internal_set_price_value(from._internal_price_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GoodsInfo_Price::CopyFrom(const GoodsInfo_Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Resource.GoodsInfo.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_Price::IsInitialized() const {
  return true;
}

void GoodsInfo_Price::InternalSwap(GoodsInfo_Price* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GoodsInfo_Price, price_value_)
      + sizeof(GoodsInfo_Price::price_value_)
      - PROTOBUF_FIELD_OFFSET(GoodsInfo_Price, price_dq_)>(
          reinterpret_cast<char*>(&price_dq_),
          reinterpret_cast<char*>(&other->price_dq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GoodsInfo_Price::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_GoodsInfo_2eproto_getter, &descriptor_table_GoodsInfo_2eproto_once,
      file_level_metadata_GoodsInfo_2eproto[0]);
}

// ===================================================================

class GoodsInfo_GoodsAttr::_Internal {
 public:
};

GoodsInfo_GoodsAttr::GoodsInfo_GoodsAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Resource.GoodsInfo.GoodsAttr)
}
GoodsInfo_GoodsAttr::GoodsInfo_GoodsAttr(const GoodsInfo_GoodsAttr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&attr_type_, &from.attr_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  // @@protoc_insertion_point(copy_constructor:Resource.GoodsInfo.GoodsAttr)
}

inline void GoodsInfo_GoodsAttr::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&attr_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
}

GoodsInfo_GoodsAttr::~GoodsInfo_GoodsAttr() {
  // @@protoc_insertion_point(destructor:Resource.GoodsInfo.GoodsAttr)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GoodsInfo_GoodsAttr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GoodsInfo_GoodsAttr::ArenaDtor(void* object) {
  GoodsInfo_GoodsAttr* _this = reinterpret_cast< GoodsInfo_GoodsAttr* >(object);
  (void)_this;
}
void GoodsInfo_GoodsAttr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoodsInfo_GoodsAttr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GoodsInfo_GoodsAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:Resource.GoodsInfo.GoodsAttr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&attr_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr_value_) -
      reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoodsInfo_GoodsAttr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 attr_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          attr_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 attr_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          attr_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GoodsInfo_GoodsAttr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Resource.GoodsInfo.GoodsAttr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 attr_type = 1;
  if (this->_internal_attr_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_attr_type(), target);
  }

  // uint32 attr_value = 2;
  if (this->_internal_attr_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_attr_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Resource.GoodsInfo.GoodsAttr)
  return target;
}

size_t GoodsInfo_GoodsAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Resource.GoodsInfo.GoodsAttr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 attr_type = 1;
  if (this->_internal_attr_type() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_attr_type());
  }

  // uint32 attr_value = 2;
  if (this->_internal_attr_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_attr_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoodsInfo_GoodsAttr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GoodsInfo_GoodsAttr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoodsInfo_GoodsAttr::GetClassData() const { return &_class_data_; }

void GoodsInfo_GoodsAttr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GoodsInfo_GoodsAttr *>(to)->MergeFrom(
      static_cast<const GoodsInfo_GoodsAttr &>(from));
}


void GoodsInfo_GoodsAttr::MergeFrom(const GoodsInfo_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Resource.GoodsInfo.GoodsAttr)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_attr_type() != 0) {
    _internal_set_attr_type(from._internal_attr_type());
  }
  if (from._internal_attr_value() != 0) {
    _internal_set_attr_value(from._internal_attr_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GoodsInfo_GoodsAttr::CopyFrom(const GoodsInfo_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Resource.GoodsInfo.GoodsAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_GoodsAttr::IsInitialized() const {
  return true;
}

void GoodsInfo_GoodsAttr::InternalSwap(GoodsInfo_GoodsAttr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GoodsInfo_GoodsAttr, attr_value_)
      + sizeof(GoodsInfo_GoodsAttr::attr_value_)
      - PROTOBUF_FIELD_OFFSET(GoodsInfo_GoodsAttr, attr_type_)>(
          reinterpret_cast<char*>(&attr_type_),
          reinterpret_cast<char*>(&other->attr_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GoodsInfo_GoodsAttr::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_GoodsInfo_2eproto_getter, &descriptor_table_GoodsInfo_2eproto_once,
      file_level_metadata_GoodsInfo_2eproto[1]);
}

// ===================================================================

class GoodsInfo::_Internal {
 public:
};

GoodsInfo::GoodsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  privileged_plat_id_list_(arena),
  price_table_(arena),
  goods_attr_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Resource.GoodsInfo)
}
GoodsInfo::GoodsInfo(const GoodsInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      privileged_plat_id_list_(from.privileged_plat_id_list_),
      price_table_(from.price_table_),
      goods_attr_(from.goods_attr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  online_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    online_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_online_time().empty()) {
    online_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_online_time(), 
      GetArenaForAllocation());
  }
  offline_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    offline_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_offline_time().empty()) {
    offline_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_offline_time(), 
      GetArenaForAllocation());
  }
  valid_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    valid_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_valid_time().empty()) {
    valid_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_valid_time(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  subsystemid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subsystemid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subsystemid().empty()) {
    subsystemid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subsystemid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&goods_id_, &from.goods_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_id_) -
    reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  // @@protoc_insertion_point(copy_constructor:Resource.GoodsInfo)
}

inline void GoodsInfo::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
online_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  online_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
offline_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  offline_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
valid_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  valid_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subsystemid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subsystemid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&goods_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&limit_id_) -
    reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
}

GoodsInfo::~GoodsInfo() {
  // @@protoc_insertion_point(destructor:Resource.GoodsInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GoodsInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  online_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  offline_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  valid_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subsystemid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GoodsInfo::ArenaDtor(void* object) {
  GoodsInfo* _this = reinterpret_cast< GoodsInfo* >(object);
  (void)_this;
}
void GoodsInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoodsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GoodsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Resource.GoodsInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privileged_plat_id_list_.Clear();
  price_table_.Clear();
  goods_attr_.Clear();
  name_.ClearToEmpty();
  online_time_.ClearToEmpty();
  offline_time_.ClearToEmpty();
  valid_time_.ClearToEmpty();
  status_.ClearToEmpty();
  description_.ClearToEmpty();
  subsystemid_.ClearToEmpty();
  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_id_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoodsInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 goods_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          goods_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 sex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          sex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 level_limit = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          level_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 club_vip_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          club_vip_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 qb_2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          qb_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 consume_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          consume_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 time_unit = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          time_unit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 is_online = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          is_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 can_buy = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          can_buy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 can_recharge = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          can_recharge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes online_time = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_online_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes offline_time = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_offline_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 privileged_plat_id_list = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_privileged_plat_id_list(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 112) {
          _internal_add_privileged_plat_id_list(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 privileged_plat_is_online = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          privileged_plat_is_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 privileged_plat_can_buy = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          privileged_plat_can_buy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 privileged_plat_can_recharge = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          privileged_plat_can_recharge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 payment_terms = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          payment_terms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes valid_time = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          auto str = _internal_mutable_valid_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 sort_priority = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          sort_priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 suit_number = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          suit_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 bag_sort_priority = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          bag_sort_priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes status = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 rank = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 price_discount = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          price_discount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 vip_discount = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          vip_discount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Resource.GoodsInfo.Price price_table = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_price_table(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Resource.GoodsInfo.GoodsAttr goods_attr = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_goods_attr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bytes description = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 limit_id = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          limit_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes subSystemId = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          auto str = _internal_mutable_subsystemid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GoodsInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Resource.GoodsInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 goods_id = 1;
  if (this->_internal_goods_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_goods_id(), target);
  }

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint32 sex = 3;
  if (this->_internal_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_sex(), target);
  }

  // uint32 level_limit = 4;
  if (this->_internal_level_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_level_limit(), target);
  }

  // int32 club_vip_level = 5;
  if (this->_internal_club_vip_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_club_vip_level(), target);
  }

  // int32 qb_2 = 6;
  if (this->_internal_qb_2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_qb_2(), target);
  }

  // uint32 consume_type = 7;
  if (this->_internal_consume_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_consume_type(), target);
  }

  // uint32 time_unit = 8;
  if (this->_internal_time_unit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_time_unit(), target);
  }

  // uint32 is_online = 9;
  if (this->_internal_is_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_is_online(), target);
  }

  // uint32 can_buy = 10;
  if (this->_internal_can_buy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_can_buy(), target);
  }

  // uint32 can_recharge = 11;
  if (this->_internal_can_recharge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_can_recharge(), target);
  }

  // bytes online_time = 12;
  if (!this->_internal_online_time().empty()) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_online_time(), target);
  }

  // bytes offline_time = 13;
  if (!this->_internal_offline_time().empty()) {
    target = stream->WriteBytesMaybeAliased(
        13, this->_internal_offline_time(), target);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  {
    int byte_size = _privileged_plat_id_list_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          14, _internal_privileged_plat_id_list(), byte_size, target);
    }
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->_internal_privileged_plat_is_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_privileged_plat_is_online(), target);
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->_internal_privileged_plat_can_buy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_privileged_plat_can_buy(), target);
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->_internal_privileged_plat_can_recharge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_privileged_plat_can_recharge(), target);
  }

  // uint32 payment_terms = 18;
  if (this->_internal_payment_terms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_payment_terms(), target);
  }

  // bytes valid_time = 19;
  if (!this->_internal_valid_time().empty()) {
    target = stream->WriteBytesMaybeAliased(
        19, this->_internal_valid_time(), target);
  }

  // uint32 sort_priority = 20;
  if (this->_internal_sort_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_sort_priority(), target);
  }

  // int32 suit_number = 21;
  if (this->_internal_suit_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(21, this->_internal_suit_number(), target);
  }

  // uint32 bag_sort_priority = 22;
  if (this->_internal_bag_sort_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_bag_sort_priority(), target);
  }

  // bytes status = 23;
  if (!this->_internal_status().empty()) {
    target = stream->WriteBytesMaybeAliased(
        23, this->_internal_status(), target);
  }

  // uint32 rank = 24;
  if (this->_internal_rank() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_rank(), target);
  }

  // uint32 price_discount = 25;
  if (this->_internal_price_discount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_price_discount(), target);
  }

  // uint32 vip_discount = 26;
  if (this->_internal_vip_discount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_vip_discount(), target);
  }

  // repeated .Resource.GoodsInfo.Price price_table = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_price_table_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(27, this->_internal_price_table(i), target, stream);
  }

  // repeated .Resource.GoodsInfo.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_goods_attr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(28, this->_internal_goods_attr(i), target, stream);
  }

  // bytes description = 29;
  if (!this->_internal_description().empty()) {
    target = stream->WriteBytesMaybeAliased(
        29, this->_internal_description(), target);
  }

  // uint32 limit_id = 30;
  if (this->_internal_limit_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_limit_id(), target);
  }

  // bytes subSystemId = 31;
  if (!this->_internal_subsystemid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        31, this->_internal_subsystemid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Resource.GoodsInfo)
  return target;
}

size_t GoodsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Resource.GoodsInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 privileged_plat_id_list = 14;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->privileged_plat_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _privileged_plat_id_list_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .Resource.GoodsInfo.Price price_table = 27;
  total_size += 2UL * this->_internal_price_table_size();
  for (const auto& msg : this->price_table_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Resource.GoodsInfo.GoodsAttr goods_attr = 28;
  total_size += 2UL * this->_internal_goods_attr_size();
  for (const auto& msg : this->goods_attr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // bytes online_time = 12;
  if (!this->_internal_online_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_online_time());
  }

  // bytes offline_time = 13;
  if (!this->_internal_offline_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_offline_time());
  }

  // bytes valid_time = 19;
  if (!this->_internal_valid_time().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_valid_time());
  }

  // bytes status = 23;
  if (!this->_internal_status().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_status());
  }

  // bytes description = 29;
  if (!this->_internal_description().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_description());
  }

  // bytes subSystemId = 31;
  if (!this->_internal_subsystemid().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_subsystemid());
  }

  // uint32 goods_id = 1;
  if (this->_internal_goods_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_goods_id());
  }

  // uint32 sex = 3;
  if (this->_internal_sex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_sex());
  }

  // uint32 level_limit = 4;
  if (this->_internal_level_limit() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_level_limit());
  }

  // int32 club_vip_level = 5;
  if (this->_internal_club_vip_level() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_club_vip_level());
  }

  // int32 qb_2 = 6;
  if (this->_internal_qb_2() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_qb_2());
  }

  // uint32 consume_type = 7;
  if (this->_internal_consume_type() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_consume_type());
  }

  // uint32 time_unit = 8;
  if (this->_internal_time_unit() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_time_unit());
  }

  // uint32 is_online = 9;
  if (this->_internal_is_online() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_is_online());
  }

  // uint32 can_buy = 10;
  if (this->_internal_can_buy() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_can_buy());
  }

  // uint32 can_recharge = 11;
  if (this->_internal_can_recharge() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_can_recharge());
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->_internal_privileged_plat_is_online() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_privileged_plat_is_online());
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->_internal_privileged_plat_can_buy() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_privileged_plat_can_buy());
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->_internal_privileged_plat_can_recharge() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_privileged_plat_can_recharge());
  }

  // uint32 payment_terms = 18;
  if (this->_internal_payment_terms() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_payment_terms());
  }

  // uint32 sort_priority = 20;
  if (this->_internal_sort_priority() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_sort_priority());
  }

  // int32 suit_number = 21;
  if (this->_internal_suit_number() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_suit_number());
  }

  // uint32 bag_sort_priority = 22;
  if (this->_internal_bag_sort_priority() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_bag_sort_priority());
  }

  // uint32 rank = 24;
  if (this->_internal_rank() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rank());
  }

  // uint32 price_discount = 25;
  if (this->_internal_price_discount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_price_discount());
  }

  // uint32 vip_discount = 26;
  if (this->_internal_vip_discount() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vip_discount());
  }

  // uint32 limit_id = 30;
  if (this->_internal_limit_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_limit_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoodsInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GoodsInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoodsInfo::GetClassData() const { return &_class_data_; }

void GoodsInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GoodsInfo *>(to)->MergeFrom(
      static_cast<const GoodsInfo &>(from));
}


void GoodsInfo::MergeFrom(const GoodsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Resource.GoodsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  privileged_plat_id_list_.MergeFrom(from.privileged_plat_id_list_);
  price_table_.MergeFrom(from.price_table_);
  goods_attr_.MergeFrom(from.goods_attr_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_online_time().empty()) {
    _internal_set_online_time(from._internal_online_time());
  }
  if (!from._internal_offline_time().empty()) {
    _internal_set_offline_time(from._internal_offline_time());
  }
  if (!from._internal_valid_time().empty()) {
    _internal_set_valid_time(from._internal_valid_time());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_subsystemid().empty()) {
    _internal_set_subsystemid(from._internal_subsystemid());
  }
  if (from._internal_goods_id() != 0) {
    _internal_set_goods_id(from._internal_goods_id());
  }
  if (from._internal_sex() != 0) {
    _internal_set_sex(from._internal_sex());
  }
  if (from._internal_level_limit() != 0) {
    _internal_set_level_limit(from._internal_level_limit());
  }
  if (from._internal_club_vip_level() != 0) {
    _internal_set_club_vip_level(from._internal_club_vip_level());
  }
  if (from._internal_qb_2() != 0) {
    _internal_set_qb_2(from._internal_qb_2());
  }
  if (from._internal_consume_type() != 0) {
    _internal_set_consume_type(from._internal_consume_type());
  }
  if (from._internal_time_unit() != 0) {
    _internal_set_time_unit(from._internal_time_unit());
  }
  if (from._internal_is_online() != 0) {
    _internal_set_is_online(from._internal_is_online());
  }
  if (from._internal_can_buy() != 0) {
    _internal_set_can_buy(from._internal_can_buy());
  }
  if (from._internal_can_recharge() != 0) {
    _internal_set_can_recharge(from._internal_can_recharge());
  }
  if (from._internal_privileged_plat_is_online() != 0) {
    _internal_set_privileged_plat_is_online(from._internal_privileged_plat_is_online());
  }
  if (from._internal_privileged_plat_can_buy() != 0) {
    _internal_set_privileged_plat_can_buy(from._internal_privileged_plat_can_buy());
  }
  if (from._internal_privileged_plat_can_recharge() != 0) {
    _internal_set_privileged_plat_can_recharge(from._internal_privileged_plat_can_recharge());
  }
  if (from._internal_payment_terms() != 0) {
    _internal_set_payment_terms(from._internal_payment_terms());
  }
  if (from._internal_sort_priority() != 0) {
    _internal_set_sort_priority(from._internal_sort_priority());
  }
  if (from._internal_suit_number() != 0) {
    _internal_set_suit_number(from._internal_suit_number());
  }
  if (from._internal_bag_sort_priority() != 0) {
    _internal_set_bag_sort_priority(from._internal_bag_sort_priority());
  }
  if (from._internal_rank() != 0) {
    _internal_set_rank(from._internal_rank());
  }
  if (from._internal_price_discount() != 0) {
    _internal_set_price_discount(from._internal_price_discount());
  }
  if (from._internal_vip_discount() != 0) {
    _internal_set_vip_discount(from._internal_vip_discount());
  }
  if (from._internal_limit_id() != 0) {
    _internal_set_limit_id(from._internal_limit_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GoodsInfo::CopyFrom(const GoodsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Resource.GoodsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo::IsInitialized() const {
  return true;
}

void GoodsInfo::InternalSwap(GoodsInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  privileged_plat_id_list_.InternalSwap(&other->privileged_plat_id_list_);
  price_table_.InternalSwap(&other->price_table_);
  goods_attr_.InternalSwap(&other->goods_attr_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &online_time_, lhs_arena,
      &other->online_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &offline_time_, lhs_arena,
      &other->offline_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &valid_time_, lhs_arena,
      &other->valid_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, lhs_arena,
      &other->status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &subsystemid_, lhs_arena,
      &other->subsystemid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GoodsInfo, limit_id_)
      + sizeof(GoodsInfo::limit_id_)
      - PROTOBUF_FIELD_OFFSET(GoodsInfo, goods_id_)>(
          reinterpret_cast<char*>(&goods_id_),
          reinterpret_cast<char*>(&other->goods_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GoodsInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_GoodsInfo_2eproto_getter, &descriptor_table_GoodsInfo_2eproto_once,
      file_level_metadata_GoodsInfo_2eproto[2]);
}

// ===================================================================

class GoodsInfo_ARRAY::_Internal {
 public:
};

GoodsInfo_ARRAY::GoodsInfo_ARRAY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Resource.GoodsInfo_ARRAY)
}
GoodsInfo_ARRAY::GoodsInfo_ARRAY(const GoodsInfo_ARRAY& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Resource.GoodsInfo_ARRAY)
}

inline void GoodsInfo_ARRAY::SharedCtor() {
}

GoodsInfo_ARRAY::~GoodsInfo_ARRAY() {
  // @@protoc_insertion_point(destructor:Resource.GoodsInfo_ARRAY)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GoodsInfo_ARRAY::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GoodsInfo_ARRAY::ArenaDtor(void* object) {
  GoodsInfo_ARRAY* _this = reinterpret_cast< GoodsInfo_ARRAY* >(object);
  (void)_this;
}
void GoodsInfo_ARRAY::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoodsInfo_ARRAY::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GoodsInfo_ARRAY::Clear() {
// @@protoc_insertion_point(message_clear_start:Resource.GoodsInfo_ARRAY)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoodsInfo_ARRAY::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Resource.GoodsInfo items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GoodsInfo_ARRAY::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Resource.GoodsInfo_ARRAY)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Resource.GoodsInfo items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Resource.GoodsInfo_ARRAY)
  return target;
}

size_t GoodsInfo_ARRAY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Resource.GoodsInfo_ARRAY)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Resource.GoodsInfo items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoodsInfo_ARRAY::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GoodsInfo_ARRAY::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoodsInfo_ARRAY::GetClassData() const { return &_class_data_; }

void GoodsInfo_ARRAY::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GoodsInfo_ARRAY *>(to)->MergeFrom(
      static_cast<const GoodsInfo_ARRAY &>(from));
}


void GoodsInfo_ARRAY::MergeFrom(const GoodsInfo_ARRAY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Resource.GoodsInfo_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GoodsInfo_ARRAY::CopyFrom(const GoodsInfo_ARRAY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Resource.GoodsInfo_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_ARRAY::IsInitialized() const {
  return true;
}

void GoodsInfo_ARRAY::InternalSwap(GoodsInfo_ARRAY* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoodsInfo_ARRAY::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_GoodsInfo_2eproto_getter, &descriptor_table_GoodsInfo_2eproto_once,
      file_level_metadata_GoodsInfo_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Resource
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Resource::GoodsInfo_Price* Arena::CreateMaybeMessage< ::Resource::GoodsInfo_Price >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Resource::GoodsInfo_Price >(arena);
}
template<> PROTOBUF_NOINLINE ::Resource::GoodsInfo_GoodsAttr* Arena::CreateMaybeMessage< ::Resource::GoodsInfo_GoodsAttr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Resource::GoodsInfo_GoodsAttr >(arena);
}
template<> PROTOBUF_NOINLINE ::Resource::GoodsInfo* Arena::CreateMaybeMessage< ::Resource::GoodsInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Resource::GoodsInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Resource::GoodsInfo_ARRAY* Arena::CreateMaybeMessage< ::Resource::GoodsInfo_ARRAY >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Resource::GoodsInfo_ARRAY >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
