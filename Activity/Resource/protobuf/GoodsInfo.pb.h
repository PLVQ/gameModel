// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GoodsInfo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_GoodsInfo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_GoodsInfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GoodsInfo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_GoodsInfo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_GoodsInfo_2eproto;
namespace Resource {
class GoodsInfo;
struct GoodsInfoDefaultTypeInternal;
extern GoodsInfoDefaultTypeInternal _GoodsInfo_default_instance_;
class GoodsInfo_ARRAY;
struct GoodsInfo_ARRAYDefaultTypeInternal;
extern GoodsInfo_ARRAYDefaultTypeInternal _GoodsInfo_ARRAY_default_instance_;
class GoodsInfo_GoodsAttr;
struct GoodsInfo_GoodsAttrDefaultTypeInternal;
extern GoodsInfo_GoodsAttrDefaultTypeInternal _GoodsInfo_GoodsAttr_default_instance_;
class GoodsInfo_Price;
struct GoodsInfo_PriceDefaultTypeInternal;
extern GoodsInfo_PriceDefaultTypeInternal _GoodsInfo_Price_default_instance_;
}  // namespace Resource
PROTOBUF_NAMESPACE_OPEN
template<> ::Resource::GoodsInfo* Arena::CreateMaybeMessage<::Resource::GoodsInfo>(Arena*);
template<> ::Resource::GoodsInfo_ARRAY* Arena::CreateMaybeMessage<::Resource::GoodsInfo_ARRAY>(Arena*);
template<> ::Resource::GoodsInfo_GoodsAttr* Arena::CreateMaybeMessage<::Resource::GoodsInfo_GoodsAttr>(Arena*);
template<> ::Resource::GoodsInfo_Price* Arena::CreateMaybeMessage<::Resource::GoodsInfo_Price>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Resource {

// ===================================================================

class GoodsInfo_Price final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Resource.GoodsInfo.Price) */ {
 public:
  inline GoodsInfo_Price() : GoodsInfo_Price(nullptr) {}
  ~GoodsInfo_Price() override;
  explicit constexpr GoodsInfo_Price(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GoodsInfo_Price(const GoodsInfo_Price& from);
  GoodsInfo_Price(GoodsInfo_Price&& from) noexcept
    : GoodsInfo_Price() {
    *this = ::std::move(from);
  }

  inline GoodsInfo_Price& operator=(const GoodsInfo_Price& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoodsInfo_Price& operator=(GoodsInfo_Price&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoodsInfo_Price& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoodsInfo_Price* internal_default_instance() {
    return reinterpret_cast<const GoodsInfo_Price*>(
               &_GoodsInfo_Price_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GoodsInfo_Price& a, GoodsInfo_Price& b) {
    a.Swap(&b);
  }
  inline void Swap(GoodsInfo_Price* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoodsInfo_Price* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoodsInfo_Price* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoodsInfo_Price>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GoodsInfo_Price& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GoodsInfo_Price& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoodsInfo_Price* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Resource.GoodsInfo.Price";
  }
  protected:
  explicit GoodsInfo_Price(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPriceDqFieldNumber = 1,
    kPriceGoldFieldNumber = 2,
    kPriceValueFieldNumber = 3,
  };
  // uint32 price_dq = 1;
  void clear_price_dq();
  uint32_t price_dq() const;
  void set_price_dq(uint32_t value);
  private:
  uint32_t _internal_price_dq() const;
  void _internal_set_price_dq(uint32_t value);
  public:

  // uint32 price_gold = 2;
  void clear_price_gold();
  uint32_t price_gold() const;
  void set_price_gold(uint32_t value);
  private:
  uint32_t _internal_price_gold() const;
  void _internal_set_price_gold(uint32_t value);
  public:

  // uint32 price_value = 3;
  void clear_price_value();
  uint32_t price_value() const;
  void set_price_value(uint32_t value);
  private:
  uint32_t _internal_price_value() const;
  void _internal_set_price_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Resource.GoodsInfo.Price)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t price_dq_;
  uint32_t price_gold_;
  uint32_t price_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GoodsInfo_2eproto;
};
// -------------------------------------------------------------------

class GoodsInfo_GoodsAttr final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Resource.GoodsInfo.GoodsAttr) */ {
 public:
  inline GoodsInfo_GoodsAttr() : GoodsInfo_GoodsAttr(nullptr) {}
  ~GoodsInfo_GoodsAttr() override;
  explicit constexpr GoodsInfo_GoodsAttr(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GoodsInfo_GoodsAttr(const GoodsInfo_GoodsAttr& from);
  GoodsInfo_GoodsAttr(GoodsInfo_GoodsAttr&& from) noexcept
    : GoodsInfo_GoodsAttr() {
    *this = ::std::move(from);
  }

  inline GoodsInfo_GoodsAttr& operator=(const GoodsInfo_GoodsAttr& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoodsInfo_GoodsAttr& operator=(GoodsInfo_GoodsAttr&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoodsInfo_GoodsAttr& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoodsInfo_GoodsAttr* internal_default_instance() {
    return reinterpret_cast<const GoodsInfo_GoodsAttr*>(
               &_GoodsInfo_GoodsAttr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GoodsInfo_GoodsAttr& a, GoodsInfo_GoodsAttr& b) {
    a.Swap(&b);
  }
  inline void Swap(GoodsInfo_GoodsAttr* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoodsInfo_GoodsAttr* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoodsInfo_GoodsAttr* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoodsInfo_GoodsAttr>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GoodsInfo_GoodsAttr& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GoodsInfo_GoodsAttr& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoodsInfo_GoodsAttr* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Resource.GoodsInfo.GoodsAttr";
  }
  protected:
  explicit GoodsInfo_GoodsAttr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttrTypeFieldNumber = 1,
    kAttrValueFieldNumber = 2,
  };
  // uint32 attr_type = 1;
  void clear_attr_type();
  uint32_t attr_type() const;
  void set_attr_type(uint32_t value);
  private:
  uint32_t _internal_attr_type() const;
  void _internal_set_attr_type(uint32_t value);
  public:

  // uint32 attr_value = 2;
  void clear_attr_value();
  uint32_t attr_value() const;
  void set_attr_value(uint32_t value);
  private:
  uint32_t _internal_attr_value() const;
  void _internal_set_attr_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Resource.GoodsInfo.GoodsAttr)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t attr_type_;
  uint32_t attr_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GoodsInfo_2eproto;
};
// -------------------------------------------------------------------

class GoodsInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Resource.GoodsInfo) */ {
 public:
  inline GoodsInfo() : GoodsInfo(nullptr) {}
  ~GoodsInfo() override;
  explicit constexpr GoodsInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GoodsInfo(const GoodsInfo& from);
  GoodsInfo(GoodsInfo&& from) noexcept
    : GoodsInfo() {
    *this = ::std::move(from);
  }

  inline GoodsInfo& operator=(const GoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoodsInfo& operator=(GoodsInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoodsInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoodsInfo* internal_default_instance() {
    return reinterpret_cast<const GoodsInfo*>(
               &_GoodsInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GoodsInfo& a, GoodsInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GoodsInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoodsInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoodsInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoodsInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GoodsInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GoodsInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoodsInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Resource.GoodsInfo";
  }
  protected:
  explicit GoodsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GoodsInfo_Price Price;
  typedef GoodsInfo_GoodsAttr GoodsAttr;

  // accessors -------------------------------------------------------

  enum : int {
    kPrivilegedPlatIdListFieldNumber = 14,
    kPriceTableFieldNumber = 27,
    kGoodsAttrFieldNumber = 28,
    kNameFieldNumber = 2,
    kOnlineTimeFieldNumber = 12,
    kOfflineTimeFieldNumber = 13,
    kValidTimeFieldNumber = 19,
    kStatusFieldNumber = 23,
    kDescriptionFieldNumber = 29,
    kSubSystemIdFieldNumber = 31,
    kGoodsIdFieldNumber = 1,
    kSexFieldNumber = 3,
    kLevelLimitFieldNumber = 4,
    kClubVipLevelFieldNumber = 5,
    kQb2FieldNumber = 6,
    kConsumeTypeFieldNumber = 7,
    kTimeUnitFieldNumber = 8,
    kIsOnlineFieldNumber = 9,
    kCanBuyFieldNumber = 10,
    kCanRechargeFieldNumber = 11,
    kPrivilegedPlatIsOnlineFieldNumber = 15,
    kPrivilegedPlatCanBuyFieldNumber = 16,
    kPrivilegedPlatCanRechargeFieldNumber = 17,
    kPaymentTermsFieldNumber = 18,
    kSortPriorityFieldNumber = 20,
    kSuitNumberFieldNumber = 21,
    kBagSortPriorityFieldNumber = 22,
    kRankFieldNumber = 24,
    kPriceDiscountFieldNumber = 25,
    kVipDiscountFieldNumber = 26,
    kLimitIdFieldNumber = 30,
  };
  // repeated uint32 privileged_plat_id_list = 14;
  int privileged_plat_id_list_size() const;
  private:
  int _internal_privileged_plat_id_list_size() const;
  public:
  void clear_privileged_plat_id_list();
  private:
  uint32_t _internal_privileged_plat_id_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_privileged_plat_id_list() const;
  void _internal_add_privileged_plat_id_list(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_privileged_plat_id_list();
  public:
  uint32_t privileged_plat_id_list(int index) const;
  void set_privileged_plat_id_list(int index, uint32_t value);
  void add_privileged_plat_id_list(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      privileged_plat_id_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_privileged_plat_id_list();

  // repeated .Resource.GoodsInfo.Price price_table = 27;
  int price_table_size() const;
  private:
  int _internal_price_table_size() const;
  public:
  void clear_price_table();
  ::Resource::GoodsInfo_Price* mutable_price_table(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_Price >*
      mutable_price_table();
  private:
  const ::Resource::GoodsInfo_Price& _internal_price_table(int index) const;
  ::Resource::GoodsInfo_Price* _internal_add_price_table();
  public:
  const ::Resource::GoodsInfo_Price& price_table(int index) const;
  ::Resource::GoodsInfo_Price* add_price_table();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_Price >&
      price_table() const;

  // repeated .Resource.GoodsInfo.GoodsAttr goods_attr = 28;
  int goods_attr_size() const;
  private:
  int _internal_goods_attr_size() const;
  public:
  void clear_goods_attr();
  ::Resource::GoodsInfo_GoodsAttr* mutable_goods_attr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_GoodsAttr >*
      mutable_goods_attr();
  private:
  const ::Resource::GoodsInfo_GoodsAttr& _internal_goods_attr(int index) const;
  ::Resource::GoodsInfo_GoodsAttr* _internal_add_goods_attr();
  public:
  const ::Resource::GoodsInfo_GoodsAttr& goods_attr(int index) const;
  ::Resource::GoodsInfo_GoodsAttr* add_goods_attr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_GoodsAttr >&
      goods_attr() const;

  // bytes name = 2;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bytes online_time = 12;
  void clear_online_time();
  const std::string& online_time() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_online_time(ArgT0&& arg0, ArgT... args);
  std::string* mutable_online_time();
  PROTOBUF_NODISCARD std::string* release_online_time();
  void set_allocated_online_time(std::string* online_time);
  private:
  const std::string& _internal_online_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_online_time(const std::string& value);
  std::string* _internal_mutable_online_time();
  public:

  // bytes offline_time = 13;
  void clear_offline_time();
  const std::string& offline_time() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_offline_time(ArgT0&& arg0, ArgT... args);
  std::string* mutable_offline_time();
  PROTOBUF_NODISCARD std::string* release_offline_time();
  void set_allocated_offline_time(std::string* offline_time);
  private:
  const std::string& _internal_offline_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_offline_time(const std::string& value);
  std::string* _internal_mutable_offline_time();
  public:

  // bytes valid_time = 19;
  void clear_valid_time();
  const std::string& valid_time() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_valid_time(ArgT0&& arg0, ArgT... args);
  std::string* mutable_valid_time();
  PROTOBUF_NODISCARD std::string* release_valid_time();
  void set_allocated_valid_time(std::string* valid_time);
  private:
  const std::string& _internal_valid_time() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_valid_time(const std::string& value);
  std::string* _internal_mutable_valid_time();
  public:

  // bytes status = 23;
  void clear_status();
  const std::string& status() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_status(ArgT0&& arg0, ArgT... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* status);
  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // bytes description = 29;
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // bytes subSystemId = 31;
  void clear_subsystemid();
  const std::string& subsystemid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_subsystemid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_subsystemid();
  PROTOBUF_NODISCARD std::string* release_subsystemid();
  void set_allocated_subsystemid(std::string* subsystemid);
  private:
  const std::string& _internal_subsystemid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subsystemid(const std::string& value);
  std::string* _internal_mutable_subsystemid();
  public:

  // uint32 goods_id = 1;
  void clear_goods_id();
  uint32_t goods_id() const;
  void set_goods_id(uint32_t value);
  private:
  uint32_t _internal_goods_id() const;
  void _internal_set_goods_id(uint32_t value);
  public:

  // uint32 sex = 3;
  void clear_sex();
  uint32_t sex() const;
  void set_sex(uint32_t value);
  private:
  uint32_t _internal_sex() const;
  void _internal_set_sex(uint32_t value);
  public:

  // uint32 level_limit = 4;
  void clear_level_limit();
  uint32_t level_limit() const;
  void set_level_limit(uint32_t value);
  private:
  uint32_t _internal_level_limit() const;
  void _internal_set_level_limit(uint32_t value);
  public:

  // int32 club_vip_level = 5;
  void clear_club_vip_level();
  int32_t club_vip_level() const;
  void set_club_vip_level(int32_t value);
  private:
  int32_t _internal_club_vip_level() const;
  void _internal_set_club_vip_level(int32_t value);
  public:

  // int32 qb_2 = 6;
  void clear_qb_2();
  int32_t qb_2() const;
  void set_qb_2(int32_t value);
  private:
  int32_t _internal_qb_2() const;
  void _internal_set_qb_2(int32_t value);
  public:

  // uint32 consume_type = 7;
  void clear_consume_type();
  uint32_t consume_type() const;
  void set_consume_type(uint32_t value);
  private:
  uint32_t _internal_consume_type() const;
  void _internal_set_consume_type(uint32_t value);
  public:

  // uint32 time_unit = 8;
  void clear_time_unit();
  uint32_t time_unit() const;
  void set_time_unit(uint32_t value);
  private:
  uint32_t _internal_time_unit() const;
  void _internal_set_time_unit(uint32_t value);
  public:

  // uint32 is_online = 9;
  void clear_is_online();
  uint32_t is_online() const;
  void set_is_online(uint32_t value);
  private:
  uint32_t _internal_is_online() const;
  void _internal_set_is_online(uint32_t value);
  public:

  // uint32 can_buy = 10;
  void clear_can_buy();
  uint32_t can_buy() const;
  void set_can_buy(uint32_t value);
  private:
  uint32_t _internal_can_buy() const;
  void _internal_set_can_buy(uint32_t value);
  public:

  // uint32 can_recharge = 11;
  void clear_can_recharge();
  uint32_t can_recharge() const;
  void set_can_recharge(uint32_t value);
  private:
  uint32_t _internal_can_recharge() const;
  void _internal_set_can_recharge(uint32_t value);
  public:

  // uint32 privileged_plat_is_online = 15;
  void clear_privileged_plat_is_online();
  uint32_t privileged_plat_is_online() const;
  void set_privileged_plat_is_online(uint32_t value);
  private:
  uint32_t _internal_privileged_plat_is_online() const;
  void _internal_set_privileged_plat_is_online(uint32_t value);
  public:

  // uint32 privileged_plat_can_buy = 16;
  void clear_privileged_plat_can_buy();
  uint32_t privileged_plat_can_buy() const;
  void set_privileged_plat_can_buy(uint32_t value);
  private:
  uint32_t _internal_privileged_plat_can_buy() const;
  void _internal_set_privileged_plat_can_buy(uint32_t value);
  public:

  // uint32 privileged_plat_can_recharge = 17;
  void clear_privileged_plat_can_recharge();
  uint32_t privileged_plat_can_recharge() const;
  void set_privileged_plat_can_recharge(uint32_t value);
  private:
  uint32_t _internal_privileged_plat_can_recharge() const;
  void _internal_set_privileged_plat_can_recharge(uint32_t value);
  public:

  // uint32 payment_terms = 18;
  void clear_payment_terms();
  uint32_t payment_terms() const;
  void set_payment_terms(uint32_t value);
  private:
  uint32_t _internal_payment_terms() const;
  void _internal_set_payment_terms(uint32_t value);
  public:

  // uint32 sort_priority = 20;
  void clear_sort_priority();
  uint32_t sort_priority() const;
  void set_sort_priority(uint32_t value);
  private:
  uint32_t _internal_sort_priority() const;
  void _internal_set_sort_priority(uint32_t value);
  public:

  // int32 suit_number = 21;
  void clear_suit_number();
  int32_t suit_number() const;
  void set_suit_number(int32_t value);
  private:
  int32_t _internal_suit_number() const;
  void _internal_set_suit_number(int32_t value);
  public:

  // uint32 bag_sort_priority = 22;
  void clear_bag_sort_priority();
  uint32_t bag_sort_priority() const;
  void set_bag_sort_priority(uint32_t value);
  private:
  uint32_t _internal_bag_sort_priority() const;
  void _internal_set_bag_sort_priority(uint32_t value);
  public:

  // uint32 rank = 24;
  void clear_rank();
  uint32_t rank() const;
  void set_rank(uint32_t value);
  private:
  uint32_t _internal_rank() const;
  void _internal_set_rank(uint32_t value);
  public:

  // uint32 price_discount = 25;
  void clear_price_discount();
  uint32_t price_discount() const;
  void set_price_discount(uint32_t value);
  private:
  uint32_t _internal_price_discount() const;
  void _internal_set_price_discount(uint32_t value);
  public:

  // uint32 vip_discount = 26;
  void clear_vip_discount();
  uint32_t vip_discount() const;
  void set_vip_discount(uint32_t value);
  private:
  uint32_t _internal_vip_discount() const;
  void _internal_set_vip_discount(uint32_t value);
  public:

  // uint32 limit_id = 30;
  void clear_limit_id();
  uint32_t limit_id() const;
  void set_limit_id(uint32_t value);
  private:
  uint32_t _internal_limit_id() const;
  void _internal_set_limit_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Resource.GoodsInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > privileged_plat_id_list_;
  mutable std::atomic<int> _privileged_plat_id_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_Price > price_table_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_GoodsAttr > goods_attr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr online_time_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr offline_time_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr valid_time_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr subsystemid_;
  uint32_t goods_id_;
  uint32_t sex_;
  uint32_t level_limit_;
  int32_t club_vip_level_;
  int32_t qb_2_;
  uint32_t consume_type_;
  uint32_t time_unit_;
  uint32_t is_online_;
  uint32_t can_buy_;
  uint32_t can_recharge_;
  uint32_t privileged_plat_is_online_;
  uint32_t privileged_plat_can_buy_;
  uint32_t privileged_plat_can_recharge_;
  uint32_t payment_terms_;
  uint32_t sort_priority_;
  int32_t suit_number_;
  uint32_t bag_sort_priority_;
  uint32_t rank_;
  uint32_t price_discount_;
  uint32_t vip_discount_;
  uint32_t limit_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GoodsInfo_2eproto;
};
// -------------------------------------------------------------------

class GoodsInfo_ARRAY final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Resource.GoodsInfo_ARRAY) */ {
 public:
  inline GoodsInfo_ARRAY() : GoodsInfo_ARRAY(nullptr) {}
  ~GoodsInfo_ARRAY() override;
  explicit constexpr GoodsInfo_ARRAY(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GoodsInfo_ARRAY(const GoodsInfo_ARRAY& from);
  GoodsInfo_ARRAY(GoodsInfo_ARRAY&& from) noexcept
    : GoodsInfo_ARRAY() {
    *this = ::std::move(from);
  }

  inline GoodsInfo_ARRAY& operator=(const GoodsInfo_ARRAY& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoodsInfo_ARRAY& operator=(GoodsInfo_ARRAY&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoodsInfo_ARRAY& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoodsInfo_ARRAY* internal_default_instance() {
    return reinterpret_cast<const GoodsInfo_ARRAY*>(
               &_GoodsInfo_ARRAY_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GoodsInfo_ARRAY& a, GoodsInfo_ARRAY& b) {
    a.Swap(&b);
  }
  inline void Swap(GoodsInfo_ARRAY* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoodsInfo_ARRAY* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoodsInfo_ARRAY* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoodsInfo_ARRAY>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GoodsInfo_ARRAY& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GoodsInfo_ARRAY& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoodsInfo_ARRAY* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Resource.GoodsInfo_ARRAY";
  }
  protected:
  explicit GoodsInfo_ARRAY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .Resource.GoodsInfo items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::Resource::GoodsInfo* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo >*
      mutable_items();
  private:
  const ::Resource::GoodsInfo& _internal_items(int index) const;
  ::Resource::GoodsInfo* _internal_add_items();
  public:
  const ::Resource::GoodsInfo& items(int index) const;
  ::Resource::GoodsInfo* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:Resource.GoodsInfo_ARRAY)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo > items_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GoodsInfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GoodsInfo_Price

// uint32 price_dq = 1;
inline void GoodsInfo_Price::clear_price_dq() {
  price_dq_ = 0u;
}
inline uint32_t GoodsInfo_Price::_internal_price_dq() const {
  return price_dq_;
}
inline uint32_t GoodsInfo_Price::price_dq() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.Price.price_dq)
  return _internal_price_dq();
}
inline void GoodsInfo_Price::_internal_set_price_dq(uint32_t value) {
  
  price_dq_ = value;
}
inline void GoodsInfo_Price::set_price_dq(uint32_t value) {
  _internal_set_price_dq(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.Price.price_dq)
}

// uint32 price_gold = 2;
inline void GoodsInfo_Price::clear_price_gold() {
  price_gold_ = 0u;
}
inline uint32_t GoodsInfo_Price::_internal_price_gold() const {
  return price_gold_;
}
inline uint32_t GoodsInfo_Price::price_gold() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.Price.price_gold)
  return _internal_price_gold();
}
inline void GoodsInfo_Price::_internal_set_price_gold(uint32_t value) {
  
  price_gold_ = value;
}
inline void GoodsInfo_Price::set_price_gold(uint32_t value) {
  _internal_set_price_gold(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.Price.price_gold)
}

// uint32 price_value = 3;
inline void GoodsInfo_Price::clear_price_value() {
  price_value_ = 0u;
}
inline uint32_t GoodsInfo_Price::_internal_price_value() const {
  return price_value_;
}
inline uint32_t GoodsInfo_Price::price_value() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.Price.price_value)
  return _internal_price_value();
}
inline void GoodsInfo_Price::_internal_set_price_value(uint32_t value) {
  
  price_value_ = value;
}
inline void GoodsInfo_Price::set_price_value(uint32_t value) {
  _internal_set_price_value(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.Price.price_value)
}

// -------------------------------------------------------------------

// GoodsInfo_GoodsAttr

// uint32 attr_type = 1;
inline void GoodsInfo_GoodsAttr::clear_attr_type() {
  attr_type_ = 0u;
}
inline uint32_t GoodsInfo_GoodsAttr::_internal_attr_type() const {
  return attr_type_;
}
inline uint32_t GoodsInfo_GoodsAttr::attr_type() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.GoodsAttr.attr_type)
  return _internal_attr_type();
}
inline void GoodsInfo_GoodsAttr::_internal_set_attr_type(uint32_t value) {
  
  attr_type_ = value;
}
inline void GoodsInfo_GoodsAttr::set_attr_type(uint32_t value) {
  _internal_set_attr_type(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.GoodsAttr.attr_type)
}

// uint32 attr_value = 2;
inline void GoodsInfo_GoodsAttr::clear_attr_value() {
  attr_value_ = 0u;
}
inline uint32_t GoodsInfo_GoodsAttr::_internal_attr_value() const {
  return attr_value_;
}
inline uint32_t GoodsInfo_GoodsAttr::attr_value() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.GoodsAttr.attr_value)
  return _internal_attr_value();
}
inline void GoodsInfo_GoodsAttr::_internal_set_attr_value(uint32_t value) {
  
  attr_value_ = value;
}
inline void GoodsInfo_GoodsAttr::set_attr_value(uint32_t value) {
  _internal_set_attr_value(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.GoodsAttr.attr_value)
}

// -------------------------------------------------------------------

// GoodsInfo

// uint32 goods_id = 1;
inline void GoodsInfo::clear_goods_id() {
  goods_id_ = 0u;
}
inline uint32_t GoodsInfo::_internal_goods_id() const {
  return goods_id_;
}
inline uint32_t GoodsInfo::goods_id() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.goods_id)
  return _internal_goods_id();
}
inline void GoodsInfo::_internal_set_goods_id(uint32_t value) {
  
  goods_id_ = value;
}
inline void GoodsInfo::set_goods_id(uint32_t value) {
  _internal_set_goods_id(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.goods_id)
}

// bytes name = 2;
inline void GoodsInfo::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GoodsInfo::name() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GoodsInfo::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.name)
}
inline std::string* GoodsInfo::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.name)
  return _s;
}
inline const std::string& GoodsInfo::_internal_name() const {
  return name_.Get();
}
inline void GoodsInfo::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GoodsInfo::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GoodsInfo::release_name() {
  // @@protoc_insertion_point(field_release:Resource.GoodsInfo.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GoodsInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Resource.GoodsInfo.name)
}

// uint32 sex = 3;
inline void GoodsInfo::clear_sex() {
  sex_ = 0u;
}
inline uint32_t GoodsInfo::_internal_sex() const {
  return sex_;
}
inline uint32_t GoodsInfo::sex() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.sex)
  return _internal_sex();
}
inline void GoodsInfo::_internal_set_sex(uint32_t value) {
  
  sex_ = value;
}
inline void GoodsInfo::set_sex(uint32_t value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.sex)
}

// uint32 level_limit = 4;
inline void GoodsInfo::clear_level_limit() {
  level_limit_ = 0u;
}
inline uint32_t GoodsInfo::_internal_level_limit() const {
  return level_limit_;
}
inline uint32_t GoodsInfo::level_limit() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.level_limit)
  return _internal_level_limit();
}
inline void GoodsInfo::_internal_set_level_limit(uint32_t value) {
  
  level_limit_ = value;
}
inline void GoodsInfo::set_level_limit(uint32_t value) {
  _internal_set_level_limit(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.level_limit)
}

// int32 club_vip_level = 5;
inline void GoodsInfo::clear_club_vip_level() {
  club_vip_level_ = 0;
}
inline int32_t GoodsInfo::_internal_club_vip_level() const {
  return club_vip_level_;
}
inline int32_t GoodsInfo::club_vip_level() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.club_vip_level)
  return _internal_club_vip_level();
}
inline void GoodsInfo::_internal_set_club_vip_level(int32_t value) {
  
  club_vip_level_ = value;
}
inline void GoodsInfo::set_club_vip_level(int32_t value) {
  _internal_set_club_vip_level(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.club_vip_level)
}

// int32 qb_2 = 6;
inline void GoodsInfo::clear_qb_2() {
  qb_2_ = 0;
}
inline int32_t GoodsInfo::_internal_qb_2() const {
  return qb_2_;
}
inline int32_t GoodsInfo::qb_2() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.qb_2)
  return _internal_qb_2();
}
inline void GoodsInfo::_internal_set_qb_2(int32_t value) {
  
  qb_2_ = value;
}
inline void GoodsInfo::set_qb_2(int32_t value) {
  _internal_set_qb_2(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.qb_2)
}

// uint32 consume_type = 7;
inline void GoodsInfo::clear_consume_type() {
  consume_type_ = 0u;
}
inline uint32_t GoodsInfo::_internal_consume_type() const {
  return consume_type_;
}
inline uint32_t GoodsInfo::consume_type() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.consume_type)
  return _internal_consume_type();
}
inline void GoodsInfo::_internal_set_consume_type(uint32_t value) {
  
  consume_type_ = value;
}
inline void GoodsInfo::set_consume_type(uint32_t value) {
  _internal_set_consume_type(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.consume_type)
}

// uint32 time_unit = 8;
inline void GoodsInfo::clear_time_unit() {
  time_unit_ = 0u;
}
inline uint32_t GoodsInfo::_internal_time_unit() const {
  return time_unit_;
}
inline uint32_t GoodsInfo::time_unit() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.time_unit)
  return _internal_time_unit();
}
inline void GoodsInfo::_internal_set_time_unit(uint32_t value) {
  
  time_unit_ = value;
}
inline void GoodsInfo::set_time_unit(uint32_t value) {
  _internal_set_time_unit(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.time_unit)
}

// uint32 is_online = 9;
inline void GoodsInfo::clear_is_online() {
  is_online_ = 0u;
}
inline uint32_t GoodsInfo::_internal_is_online() const {
  return is_online_;
}
inline uint32_t GoodsInfo::is_online() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.is_online)
  return _internal_is_online();
}
inline void GoodsInfo::_internal_set_is_online(uint32_t value) {
  
  is_online_ = value;
}
inline void GoodsInfo::set_is_online(uint32_t value) {
  _internal_set_is_online(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.is_online)
}

// uint32 can_buy = 10;
inline void GoodsInfo::clear_can_buy() {
  can_buy_ = 0u;
}
inline uint32_t GoodsInfo::_internal_can_buy() const {
  return can_buy_;
}
inline uint32_t GoodsInfo::can_buy() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.can_buy)
  return _internal_can_buy();
}
inline void GoodsInfo::_internal_set_can_buy(uint32_t value) {
  
  can_buy_ = value;
}
inline void GoodsInfo::set_can_buy(uint32_t value) {
  _internal_set_can_buy(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.can_buy)
}

// uint32 can_recharge = 11;
inline void GoodsInfo::clear_can_recharge() {
  can_recharge_ = 0u;
}
inline uint32_t GoodsInfo::_internal_can_recharge() const {
  return can_recharge_;
}
inline uint32_t GoodsInfo::can_recharge() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.can_recharge)
  return _internal_can_recharge();
}
inline void GoodsInfo::_internal_set_can_recharge(uint32_t value) {
  
  can_recharge_ = value;
}
inline void GoodsInfo::set_can_recharge(uint32_t value) {
  _internal_set_can_recharge(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.can_recharge)
}

// bytes online_time = 12;
inline void GoodsInfo::clear_online_time() {
  online_time_.ClearToEmpty();
}
inline const std::string& GoodsInfo::online_time() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.online_time)
  return _internal_online_time();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GoodsInfo::set_online_time(ArgT0&& arg0, ArgT... args) {
 
 online_time_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.online_time)
}
inline std::string* GoodsInfo::mutable_online_time() {
  std::string* _s = _internal_mutable_online_time();
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.online_time)
  return _s;
}
inline const std::string& GoodsInfo::_internal_online_time() const {
  return online_time_.Get();
}
inline void GoodsInfo::_internal_set_online_time(const std::string& value) {
  
  online_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GoodsInfo::_internal_mutable_online_time() {
  
  return online_time_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GoodsInfo::release_online_time() {
  // @@protoc_insertion_point(field_release:Resource.GoodsInfo.online_time)
  return online_time_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GoodsInfo::set_allocated_online_time(std::string* online_time) {
  if (online_time != nullptr) {
    
  } else {
    
  }
  online_time_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), online_time,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (online_time_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    online_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Resource.GoodsInfo.online_time)
}

// bytes offline_time = 13;
inline void GoodsInfo::clear_offline_time() {
  offline_time_.ClearToEmpty();
}
inline const std::string& GoodsInfo::offline_time() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.offline_time)
  return _internal_offline_time();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GoodsInfo::set_offline_time(ArgT0&& arg0, ArgT... args) {
 
 offline_time_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.offline_time)
}
inline std::string* GoodsInfo::mutable_offline_time() {
  std::string* _s = _internal_mutable_offline_time();
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.offline_time)
  return _s;
}
inline const std::string& GoodsInfo::_internal_offline_time() const {
  return offline_time_.Get();
}
inline void GoodsInfo::_internal_set_offline_time(const std::string& value) {
  
  offline_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GoodsInfo::_internal_mutable_offline_time() {
  
  return offline_time_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GoodsInfo::release_offline_time() {
  // @@protoc_insertion_point(field_release:Resource.GoodsInfo.offline_time)
  return offline_time_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GoodsInfo::set_allocated_offline_time(std::string* offline_time) {
  if (offline_time != nullptr) {
    
  } else {
    
  }
  offline_time_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), offline_time,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (offline_time_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    offline_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Resource.GoodsInfo.offline_time)
}

// repeated uint32 privileged_plat_id_list = 14;
inline int GoodsInfo::_internal_privileged_plat_id_list_size() const {
  return privileged_plat_id_list_.size();
}
inline int GoodsInfo::privileged_plat_id_list_size() const {
  return _internal_privileged_plat_id_list_size();
}
inline void GoodsInfo::clear_privileged_plat_id_list() {
  privileged_plat_id_list_.Clear();
}
inline uint32_t GoodsInfo::_internal_privileged_plat_id_list(int index) const {
  return privileged_plat_id_list_.Get(index);
}
inline uint32_t GoodsInfo::privileged_plat_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.privileged_plat_id_list)
  return _internal_privileged_plat_id_list(index);
}
inline void GoodsInfo::set_privileged_plat_id_list(int index, uint32_t value) {
  privileged_plat_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.privileged_plat_id_list)
}
inline void GoodsInfo::_internal_add_privileged_plat_id_list(uint32_t value) {
  privileged_plat_id_list_.Add(value);
}
inline void GoodsInfo::add_privileged_plat_id_list(uint32_t value) {
  _internal_add_privileged_plat_id_list(value);
  // @@protoc_insertion_point(field_add:Resource.GoodsInfo.privileged_plat_id_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GoodsInfo::_internal_privileged_plat_id_list() const {
  return privileged_plat_id_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GoodsInfo::privileged_plat_id_list() const {
  // @@protoc_insertion_point(field_list:Resource.GoodsInfo.privileged_plat_id_list)
  return _internal_privileged_plat_id_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GoodsInfo::_internal_mutable_privileged_plat_id_list() {
  return &privileged_plat_id_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GoodsInfo::mutable_privileged_plat_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Resource.GoodsInfo.privileged_plat_id_list)
  return _internal_mutable_privileged_plat_id_list();
}

// uint32 privileged_plat_is_online = 15;
inline void GoodsInfo::clear_privileged_plat_is_online() {
  privileged_plat_is_online_ = 0u;
}
inline uint32_t GoodsInfo::_internal_privileged_plat_is_online() const {
  return privileged_plat_is_online_;
}
inline uint32_t GoodsInfo::privileged_plat_is_online() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.privileged_plat_is_online)
  return _internal_privileged_plat_is_online();
}
inline void GoodsInfo::_internal_set_privileged_plat_is_online(uint32_t value) {
  
  privileged_plat_is_online_ = value;
}
inline void GoodsInfo::set_privileged_plat_is_online(uint32_t value) {
  _internal_set_privileged_plat_is_online(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.privileged_plat_is_online)
}

// uint32 privileged_plat_can_buy = 16;
inline void GoodsInfo::clear_privileged_plat_can_buy() {
  privileged_plat_can_buy_ = 0u;
}
inline uint32_t GoodsInfo::_internal_privileged_plat_can_buy() const {
  return privileged_plat_can_buy_;
}
inline uint32_t GoodsInfo::privileged_plat_can_buy() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.privileged_plat_can_buy)
  return _internal_privileged_plat_can_buy();
}
inline void GoodsInfo::_internal_set_privileged_plat_can_buy(uint32_t value) {
  
  privileged_plat_can_buy_ = value;
}
inline void GoodsInfo::set_privileged_plat_can_buy(uint32_t value) {
  _internal_set_privileged_plat_can_buy(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.privileged_plat_can_buy)
}

// uint32 privileged_plat_can_recharge = 17;
inline void GoodsInfo::clear_privileged_plat_can_recharge() {
  privileged_plat_can_recharge_ = 0u;
}
inline uint32_t GoodsInfo::_internal_privileged_plat_can_recharge() const {
  return privileged_plat_can_recharge_;
}
inline uint32_t GoodsInfo::privileged_plat_can_recharge() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.privileged_plat_can_recharge)
  return _internal_privileged_plat_can_recharge();
}
inline void GoodsInfo::_internal_set_privileged_plat_can_recharge(uint32_t value) {
  
  privileged_plat_can_recharge_ = value;
}
inline void GoodsInfo::set_privileged_plat_can_recharge(uint32_t value) {
  _internal_set_privileged_plat_can_recharge(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.privileged_plat_can_recharge)
}

// uint32 payment_terms = 18;
inline void GoodsInfo::clear_payment_terms() {
  payment_terms_ = 0u;
}
inline uint32_t GoodsInfo::_internal_payment_terms() const {
  return payment_terms_;
}
inline uint32_t GoodsInfo::payment_terms() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.payment_terms)
  return _internal_payment_terms();
}
inline void GoodsInfo::_internal_set_payment_terms(uint32_t value) {
  
  payment_terms_ = value;
}
inline void GoodsInfo::set_payment_terms(uint32_t value) {
  _internal_set_payment_terms(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.payment_terms)
}

// bytes valid_time = 19;
inline void GoodsInfo::clear_valid_time() {
  valid_time_.ClearToEmpty();
}
inline const std::string& GoodsInfo::valid_time() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.valid_time)
  return _internal_valid_time();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GoodsInfo::set_valid_time(ArgT0&& arg0, ArgT... args) {
 
 valid_time_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.valid_time)
}
inline std::string* GoodsInfo::mutable_valid_time() {
  std::string* _s = _internal_mutable_valid_time();
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.valid_time)
  return _s;
}
inline const std::string& GoodsInfo::_internal_valid_time() const {
  return valid_time_.Get();
}
inline void GoodsInfo::_internal_set_valid_time(const std::string& value) {
  
  valid_time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GoodsInfo::_internal_mutable_valid_time() {
  
  return valid_time_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GoodsInfo::release_valid_time() {
  // @@protoc_insertion_point(field_release:Resource.GoodsInfo.valid_time)
  return valid_time_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GoodsInfo::set_allocated_valid_time(std::string* valid_time) {
  if (valid_time != nullptr) {
    
  } else {
    
  }
  valid_time_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), valid_time,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (valid_time_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    valid_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Resource.GoodsInfo.valid_time)
}

// uint32 sort_priority = 20;
inline void GoodsInfo::clear_sort_priority() {
  sort_priority_ = 0u;
}
inline uint32_t GoodsInfo::_internal_sort_priority() const {
  return sort_priority_;
}
inline uint32_t GoodsInfo::sort_priority() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.sort_priority)
  return _internal_sort_priority();
}
inline void GoodsInfo::_internal_set_sort_priority(uint32_t value) {
  
  sort_priority_ = value;
}
inline void GoodsInfo::set_sort_priority(uint32_t value) {
  _internal_set_sort_priority(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.sort_priority)
}

// int32 suit_number = 21;
inline void GoodsInfo::clear_suit_number() {
  suit_number_ = 0;
}
inline int32_t GoodsInfo::_internal_suit_number() const {
  return suit_number_;
}
inline int32_t GoodsInfo::suit_number() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.suit_number)
  return _internal_suit_number();
}
inline void GoodsInfo::_internal_set_suit_number(int32_t value) {
  
  suit_number_ = value;
}
inline void GoodsInfo::set_suit_number(int32_t value) {
  _internal_set_suit_number(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.suit_number)
}

// uint32 bag_sort_priority = 22;
inline void GoodsInfo::clear_bag_sort_priority() {
  bag_sort_priority_ = 0u;
}
inline uint32_t GoodsInfo::_internal_bag_sort_priority() const {
  return bag_sort_priority_;
}
inline uint32_t GoodsInfo::bag_sort_priority() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.bag_sort_priority)
  return _internal_bag_sort_priority();
}
inline void GoodsInfo::_internal_set_bag_sort_priority(uint32_t value) {
  
  bag_sort_priority_ = value;
}
inline void GoodsInfo::set_bag_sort_priority(uint32_t value) {
  _internal_set_bag_sort_priority(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.bag_sort_priority)
}

// bytes status = 23;
inline void GoodsInfo::clear_status() {
  status_.ClearToEmpty();
}
inline const std::string& GoodsInfo::status() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.status)
  return _internal_status();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GoodsInfo::set_status(ArgT0&& arg0, ArgT... args) {
 
 status_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.status)
}
inline std::string* GoodsInfo::mutable_status() {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.status)
  return _s;
}
inline const std::string& GoodsInfo::_internal_status() const {
  return status_.Get();
}
inline void GoodsInfo::_internal_set_status(const std::string& value) {
  
  status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GoodsInfo::_internal_mutable_status() {
  
  return status_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GoodsInfo::release_status() {
  // @@protoc_insertion_point(field_release:Resource.GoodsInfo.status)
  return status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GoodsInfo::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (status_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Resource.GoodsInfo.status)
}

// uint32 rank = 24;
inline void GoodsInfo::clear_rank() {
  rank_ = 0u;
}
inline uint32_t GoodsInfo::_internal_rank() const {
  return rank_;
}
inline uint32_t GoodsInfo::rank() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.rank)
  return _internal_rank();
}
inline void GoodsInfo::_internal_set_rank(uint32_t value) {
  
  rank_ = value;
}
inline void GoodsInfo::set_rank(uint32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.rank)
}

// uint32 price_discount = 25;
inline void GoodsInfo::clear_price_discount() {
  price_discount_ = 0u;
}
inline uint32_t GoodsInfo::_internal_price_discount() const {
  return price_discount_;
}
inline uint32_t GoodsInfo::price_discount() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.price_discount)
  return _internal_price_discount();
}
inline void GoodsInfo::_internal_set_price_discount(uint32_t value) {
  
  price_discount_ = value;
}
inline void GoodsInfo::set_price_discount(uint32_t value) {
  _internal_set_price_discount(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.price_discount)
}

// uint32 vip_discount = 26;
inline void GoodsInfo::clear_vip_discount() {
  vip_discount_ = 0u;
}
inline uint32_t GoodsInfo::_internal_vip_discount() const {
  return vip_discount_;
}
inline uint32_t GoodsInfo::vip_discount() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.vip_discount)
  return _internal_vip_discount();
}
inline void GoodsInfo::_internal_set_vip_discount(uint32_t value) {
  
  vip_discount_ = value;
}
inline void GoodsInfo::set_vip_discount(uint32_t value) {
  _internal_set_vip_discount(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.vip_discount)
}

// repeated .Resource.GoodsInfo.Price price_table = 27;
inline int GoodsInfo::_internal_price_table_size() const {
  return price_table_.size();
}
inline int GoodsInfo::price_table_size() const {
  return _internal_price_table_size();
}
inline void GoodsInfo::clear_price_table() {
  price_table_.Clear();
}
inline ::Resource::GoodsInfo_Price* GoodsInfo::mutable_price_table(int index) {
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.price_table)
  return price_table_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_Price >*
GoodsInfo::mutable_price_table() {
  // @@protoc_insertion_point(field_mutable_list:Resource.GoodsInfo.price_table)
  return &price_table_;
}
inline const ::Resource::GoodsInfo_Price& GoodsInfo::_internal_price_table(int index) const {
  return price_table_.Get(index);
}
inline const ::Resource::GoodsInfo_Price& GoodsInfo::price_table(int index) const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.price_table)
  return _internal_price_table(index);
}
inline ::Resource::GoodsInfo_Price* GoodsInfo::_internal_add_price_table() {
  return price_table_.Add();
}
inline ::Resource::GoodsInfo_Price* GoodsInfo::add_price_table() {
  ::Resource::GoodsInfo_Price* _add = _internal_add_price_table();
  // @@protoc_insertion_point(field_add:Resource.GoodsInfo.price_table)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_Price >&
GoodsInfo::price_table() const {
  // @@protoc_insertion_point(field_list:Resource.GoodsInfo.price_table)
  return price_table_;
}

// repeated .Resource.GoodsInfo.GoodsAttr goods_attr = 28;
inline int GoodsInfo::_internal_goods_attr_size() const {
  return goods_attr_.size();
}
inline int GoodsInfo::goods_attr_size() const {
  return _internal_goods_attr_size();
}
inline void GoodsInfo::clear_goods_attr() {
  goods_attr_.Clear();
}
inline ::Resource::GoodsInfo_GoodsAttr* GoodsInfo::mutable_goods_attr(int index) {
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.goods_attr)
  return goods_attr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_GoodsAttr >*
GoodsInfo::mutable_goods_attr() {
  // @@protoc_insertion_point(field_mutable_list:Resource.GoodsInfo.goods_attr)
  return &goods_attr_;
}
inline const ::Resource::GoodsInfo_GoodsAttr& GoodsInfo::_internal_goods_attr(int index) const {
  return goods_attr_.Get(index);
}
inline const ::Resource::GoodsInfo_GoodsAttr& GoodsInfo::goods_attr(int index) const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.goods_attr)
  return _internal_goods_attr(index);
}
inline ::Resource::GoodsInfo_GoodsAttr* GoodsInfo::_internal_add_goods_attr() {
  return goods_attr_.Add();
}
inline ::Resource::GoodsInfo_GoodsAttr* GoodsInfo::add_goods_attr() {
  ::Resource::GoodsInfo_GoodsAttr* _add = _internal_add_goods_attr();
  // @@protoc_insertion_point(field_add:Resource.GoodsInfo.goods_attr)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo_GoodsAttr >&
GoodsInfo::goods_attr() const {
  // @@protoc_insertion_point(field_list:Resource.GoodsInfo.goods_attr)
  return goods_attr_;
}

// bytes description = 29;
inline void GoodsInfo::clear_description() {
  description_.ClearToEmpty();
}
inline const std::string& GoodsInfo::description() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GoodsInfo::set_description(ArgT0&& arg0, ArgT... args) {
 
 description_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.description)
}
inline std::string* GoodsInfo::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.description)
  return _s;
}
inline const std::string& GoodsInfo::_internal_description() const {
  return description_.Get();
}
inline void GoodsInfo::_internal_set_description(const std::string& value) {
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GoodsInfo::_internal_mutable_description() {
  
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GoodsInfo::release_description() {
  // @@protoc_insertion_point(field_release:Resource.GoodsInfo.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GoodsInfo::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (description_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Resource.GoodsInfo.description)
}

// uint32 limit_id = 30;
inline void GoodsInfo::clear_limit_id() {
  limit_id_ = 0u;
}
inline uint32_t GoodsInfo::_internal_limit_id() const {
  return limit_id_;
}
inline uint32_t GoodsInfo::limit_id() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.limit_id)
  return _internal_limit_id();
}
inline void GoodsInfo::_internal_set_limit_id(uint32_t value) {
  
  limit_id_ = value;
}
inline void GoodsInfo::set_limit_id(uint32_t value) {
  _internal_set_limit_id(value);
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.limit_id)
}

// bytes subSystemId = 31;
inline void GoodsInfo::clear_subsystemid() {
  subsystemid_.ClearToEmpty();
}
inline const std::string& GoodsInfo::subsystemid() const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo.subSystemId)
  return _internal_subsystemid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GoodsInfo::set_subsystemid(ArgT0&& arg0, ArgT... args) {
 
 subsystemid_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Resource.GoodsInfo.subSystemId)
}
inline std::string* GoodsInfo::mutable_subsystemid() {
  std::string* _s = _internal_mutable_subsystemid();
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo.subSystemId)
  return _s;
}
inline const std::string& GoodsInfo::_internal_subsystemid() const {
  return subsystemid_.Get();
}
inline void GoodsInfo::_internal_set_subsystemid(const std::string& value) {
  
  subsystemid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GoodsInfo::_internal_mutable_subsystemid() {
  
  return subsystemid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GoodsInfo::release_subsystemid() {
  // @@protoc_insertion_point(field_release:Resource.GoodsInfo.subSystemId)
  return subsystemid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GoodsInfo::set_allocated_subsystemid(std::string* subsystemid) {
  if (subsystemid != nullptr) {
    
  } else {
    
  }
  subsystemid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), subsystemid,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (subsystemid_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    subsystemid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Resource.GoodsInfo.subSystemId)
}

// -------------------------------------------------------------------

// GoodsInfo_ARRAY

// repeated .Resource.GoodsInfo items = 1;
inline int GoodsInfo_ARRAY::_internal_items_size() const {
  return items_.size();
}
inline int GoodsInfo_ARRAY::items_size() const {
  return _internal_items_size();
}
inline void GoodsInfo_ARRAY::clear_items() {
  items_.Clear();
}
inline ::Resource::GoodsInfo* GoodsInfo_ARRAY::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Resource.GoodsInfo_ARRAY.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo >*
GoodsInfo_ARRAY::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Resource.GoodsInfo_ARRAY.items)
  return &items_;
}
inline const ::Resource::GoodsInfo& GoodsInfo_ARRAY::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::Resource::GoodsInfo& GoodsInfo_ARRAY::items(int index) const {
  // @@protoc_insertion_point(field_get:Resource.GoodsInfo_ARRAY.items)
  return _internal_items(index);
}
inline ::Resource::GoodsInfo* GoodsInfo_ARRAY::_internal_add_items() {
  return items_.Add();
}
inline ::Resource::GoodsInfo* GoodsInfo_ARRAY::add_items() {
  ::Resource::GoodsInfo* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:Resource.GoodsInfo_ARRAY.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Resource::GoodsInfo >&
GoodsInfo_ARRAY::items() const {
  // @@protoc_insertion_point(field_list:Resource.GoodsInfo_ARRAY.items)
  return items_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Resource

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_GoodsInfo_2eproto
