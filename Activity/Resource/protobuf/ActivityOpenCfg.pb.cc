// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityOpenCfg.proto

#include "ActivityOpenCfg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Resource {
constexpr ActivityOpenCfg::ActivityOpenCfg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : openparam_()
  , _openparam_cached_byte_size_(0)
  , activityname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , activityid_(0u)
  , acitivitytype_(0u)
  , opentype_(0u)
  , openlevel_(0u)
  , openservertime_(uint64_t{0u})
  , createroleday_(0u)
  , sortid_(0u)
  , delaytime_(uint64_t{0u}){}
struct ActivityOpenCfgDefaultTypeInternal {
  constexpr ActivityOpenCfgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ActivityOpenCfgDefaultTypeInternal() {}
  union {
    ActivityOpenCfg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ActivityOpenCfgDefaultTypeInternal _ActivityOpenCfg_default_instance_;
constexpr ActivityOpenCfg_ARRAY::ActivityOpenCfg_ARRAY(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct ActivityOpenCfg_ARRAYDefaultTypeInternal {
  constexpr ActivityOpenCfg_ARRAYDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ActivityOpenCfg_ARRAYDefaultTypeInternal() {}
  union {
    ActivityOpenCfg_ARRAY _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ActivityOpenCfg_ARRAYDefaultTypeInternal _ActivityOpenCfg_ARRAY_default_instance_;
}  // namespace Resource
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ActivityOpenCfg_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ActivityOpenCfg_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ActivityOpenCfg_2eproto = nullptr;

const uint32_t TableStruct_ActivityOpenCfg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, activityid_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, activityname_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, acitivitytype_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, opentype_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, openparam_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, openservertime_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, openlevel_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, createroleday_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, sortid_),
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg, delaytime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg_ARRAY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Resource::ActivityOpenCfg_ARRAY, items_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Resource::ActivityOpenCfg)},
  { 16, -1, -1, sizeof(::Resource::ActivityOpenCfg_ARRAY)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Resource::_ActivityOpenCfg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Resource::_ActivityOpenCfg_ARRAY_default_instance_),
};

const char descriptor_table_protodef_ActivityOpenCfg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025ActivityOpenCfg.proto\022\010Resource\"\334\001\n\017Ac"
  "tivityOpenCfg\022\022\n\nActivityID\030\001 \001(\r\022\024\n\014Act"
  "ivityName\030\002 \001(\014\022\025\n\rAcitivityType\030\003 \001(\r\022\020"
  "\n\010OpenType\030\004 \001(\r\022\021\n\tOpenParam\030\005 \003(\004\022\026\n\016O"
  "penServerTime\030\006 \001(\004\022\021\n\tOpenLevel\030\007 \001(\r\022\025"
  "\n\rCreateRoleDay\030\010 \001(\r\022\016\n\006SortID\030\t \001(\r\022\021\n"
  "\tDelayTime\030\n \001(\004\"A\n\025ActivityOpenCfg_ARRA"
  "Y\022(\n\005items\030\001 \003(\0132\031.Resource.ActivityOpen"
  "Cfgb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ActivityOpenCfg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ActivityOpenCfg_2eproto = {
  false, false, 331, descriptor_table_protodef_ActivityOpenCfg_2eproto, "ActivityOpenCfg.proto", 
  &descriptor_table_ActivityOpenCfg_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_ActivityOpenCfg_2eproto::offsets,
  file_level_metadata_ActivityOpenCfg_2eproto, file_level_enum_descriptors_ActivityOpenCfg_2eproto, file_level_service_descriptors_ActivityOpenCfg_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ActivityOpenCfg_2eproto_getter() {
  return &descriptor_table_ActivityOpenCfg_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ActivityOpenCfg_2eproto(&descriptor_table_ActivityOpenCfg_2eproto);
namespace Resource {

// ===================================================================

class ActivityOpenCfg::_Internal {
 public:
};

ActivityOpenCfg::ActivityOpenCfg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  openparam_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Resource.ActivityOpenCfg)
}
ActivityOpenCfg::ActivityOpenCfg(const ActivityOpenCfg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      openparam_(from.openparam_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  activityname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    activityname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_activityname().empty()) {
    activityname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_activityname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&activityid_, &from.activityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&delaytime_) -
    reinterpret_cast<char*>(&activityid_)) + sizeof(delaytime_));
  // @@protoc_insertion_point(copy_constructor:Resource.ActivityOpenCfg)
}

inline void ActivityOpenCfg::SharedCtor() {
activityname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  activityname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&activityid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&delaytime_) -
    reinterpret_cast<char*>(&activityid_)) + sizeof(delaytime_));
}

ActivityOpenCfg::~ActivityOpenCfg() {
  // @@protoc_insertion_point(destructor:Resource.ActivityOpenCfg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ActivityOpenCfg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  activityname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActivityOpenCfg::ArenaDtor(void* object) {
  ActivityOpenCfg* _this = reinterpret_cast< ActivityOpenCfg* >(object);
  (void)_this;
}
void ActivityOpenCfg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActivityOpenCfg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ActivityOpenCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:Resource.ActivityOpenCfg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  openparam_.Clear();
  activityname_.ClearToEmpty();
  ::memset(&activityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delaytime_) -
      reinterpret_cast<char*>(&activityid_)) + sizeof(delaytime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActivityOpenCfg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ActivityID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          activityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes ActivityName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_activityname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AcitivityType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          acitivitytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 OpenType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          opentype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 OpenParam = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_openparam(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_openparam(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 OpenServerTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          openservertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 OpenLevel = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          openlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CreateRoleDay = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          createroleday_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SortID = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          sortid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 DelayTime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          delaytime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActivityOpenCfg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Resource.ActivityOpenCfg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ActivityID = 1;
  if (this->_internal_activityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_activityid(), target);
  }

  // bytes ActivityName = 2;
  if (!this->_internal_activityname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_activityname(), target);
  }

  // uint32 AcitivityType = 3;
  if (this->_internal_acitivitytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_acitivitytype(), target);
  }

  // uint32 OpenType = 4;
  if (this->_internal_opentype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_opentype(), target);
  }

  // repeated uint64 OpenParam = 5;
  {
    int byte_size = _openparam_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          5, _internal_openparam(), byte_size, target);
    }
  }

  // uint64 OpenServerTime = 6;
  if (this->_internal_openservertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_openservertime(), target);
  }

  // uint32 OpenLevel = 7;
  if (this->_internal_openlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_openlevel(), target);
  }

  // uint32 CreateRoleDay = 8;
  if (this->_internal_createroleday() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_createroleday(), target);
  }

  // uint32 SortID = 9;
  if (this->_internal_sortid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_sortid(), target);
  }

  // uint64 DelayTime = 10;
  if (this->_internal_delaytime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(10, this->_internal_delaytime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Resource.ActivityOpenCfg)
  return target;
}

size_t ActivityOpenCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Resource.ActivityOpenCfg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 OpenParam = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->openparam_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _openparam_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes ActivityName = 2;
  if (!this->_internal_activityname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_activityname());
  }

  // uint32 ActivityID = 1;
  if (this->_internal_activityid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_activityid());
  }

  // uint32 AcitivityType = 3;
  if (this->_internal_acitivitytype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_acitivitytype());
  }

  // uint32 OpenType = 4;
  if (this->_internal_opentype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_opentype());
  }

  // uint32 OpenLevel = 7;
  if (this->_internal_openlevel() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_openlevel());
  }

  // uint64 OpenServerTime = 6;
  if (this->_internal_openservertime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_openservertime());
  }

  // uint32 CreateRoleDay = 8;
  if (this->_internal_createroleday() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_createroleday());
  }

  // uint32 SortID = 9;
  if (this->_internal_sortid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_sortid());
  }

  // uint64 DelayTime = 10;
  if (this->_internal_delaytime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_delaytime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActivityOpenCfg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ActivityOpenCfg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActivityOpenCfg::GetClassData() const { return &_class_data_; }

void ActivityOpenCfg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ActivityOpenCfg *>(to)->MergeFrom(
      static_cast<const ActivityOpenCfg &>(from));
}


void ActivityOpenCfg::MergeFrom(const ActivityOpenCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Resource.ActivityOpenCfg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  openparam_.MergeFrom(from.openparam_);
  if (!from._internal_activityname().empty()) {
    _internal_set_activityname(from._internal_activityname());
  }
  if (from._internal_activityid() != 0) {
    _internal_set_activityid(from._internal_activityid());
  }
  if (from._internal_acitivitytype() != 0) {
    _internal_set_acitivitytype(from._internal_acitivitytype());
  }
  if (from._internal_opentype() != 0) {
    _internal_set_opentype(from._internal_opentype());
  }
  if (from._internal_openlevel() != 0) {
    _internal_set_openlevel(from._internal_openlevel());
  }
  if (from._internal_openservertime() != 0) {
    _internal_set_openservertime(from._internal_openservertime());
  }
  if (from._internal_createroleday() != 0) {
    _internal_set_createroleday(from._internal_createroleday());
  }
  if (from._internal_sortid() != 0) {
    _internal_set_sortid(from._internal_sortid());
  }
  if (from._internal_delaytime() != 0) {
    _internal_set_delaytime(from._internal_delaytime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActivityOpenCfg::CopyFrom(const ActivityOpenCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Resource.ActivityOpenCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityOpenCfg::IsInitialized() const {
  return true;
}

void ActivityOpenCfg::InternalSwap(ActivityOpenCfg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  openparam_.InternalSwap(&other->openparam_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &activityname_, lhs_arena,
      &other->activityname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActivityOpenCfg, delaytime_)
      + sizeof(ActivityOpenCfg::delaytime_)
      - PROTOBUF_FIELD_OFFSET(ActivityOpenCfg, activityid_)>(
          reinterpret_cast<char*>(&activityid_),
          reinterpret_cast<char*>(&other->activityid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivityOpenCfg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ActivityOpenCfg_2eproto_getter, &descriptor_table_ActivityOpenCfg_2eproto_once,
      file_level_metadata_ActivityOpenCfg_2eproto[0]);
}

// ===================================================================

class ActivityOpenCfg_ARRAY::_Internal {
 public:
};

ActivityOpenCfg_ARRAY::ActivityOpenCfg_ARRAY(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Resource.ActivityOpenCfg_ARRAY)
}
ActivityOpenCfg_ARRAY::ActivityOpenCfg_ARRAY(const ActivityOpenCfg_ARRAY& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Resource.ActivityOpenCfg_ARRAY)
}

inline void ActivityOpenCfg_ARRAY::SharedCtor() {
}

ActivityOpenCfg_ARRAY::~ActivityOpenCfg_ARRAY() {
  // @@protoc_insertion_point(destructor:Resource.ActivityOpenCfg_ARRAY)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ActivityOpenCfg_ARRAY::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ActivityOpenCfg_ARRAY::ArenaDtor(void* object) {
  ActivityOpenCfg_ARRAY* _this = reinterpret_cast< ActivityOpenCfg_ARRAY* >(object);
  (void)_this;
}
void ActivityOpenCfg_ARRAY::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActivityOpenCfg_ARRAY::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ActivityOpenCfg_ARRAY::Clear() {
// @@protoc_insertion_point(message_clear_start:Resource.ActivityOpenCfg_ARRAY)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActivityOpenCfg_ARRAY::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Resource.ActivityOpenCfg items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActivityOpenCfg_ARRAY::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Resource.ActivityOpenCfg_ARRAY)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Resource.ActivityOpenCfg items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Resource.ActivityOpenCfg_ARRAY)
  return target;
}

size_t ActivityOpenCfg_ARRAY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Resource.ActivityOpenCfg_ARRAY)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Resource.ActivityOpenCfg items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActivityOpenCfg_ARRAY::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ActivityOpenCfg_ARRAY::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActivityOpenCfg_ARRAY::GetClassData() const { return &_class_data_; }

void ActivityOpenCfg_ARRAY::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ActivityOpenCfg_ARRAY *>(to)->MergeFrom(
      static_cast<const ActivityOpenCfg_ARRAY &>(from));
}


void ActivityOpenCfg_ARRAY::MergeFrom(const ActivityOpenCfg_ARRAY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Resource.ActivityOpenCfg_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActivityOpenCfg_ARRAY::CopyFrom(const ActivityOpenCfg_ARRAY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Resource.ActivityOpenCfg_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityOpenCfg_ARRAY::IsInitialized() const {
  return true;
}

void ActivityOpenCfg_ARRAY::InternalSwap(ActivityOpenCfg_ARRAY* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivityOpenCfg_ARRAY::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ActivityOpenCfg_2eproto_getter, &descriptor_table_ActivityOpenCfg_2eproto_once,
      file_level_metadata_ActivityOpenCfg_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Resource
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Resource::ActivityOpenCfg* Arena::CreateMaybeMessage< ::Resource::ActivityOpenCfg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Resource::ActivityOpenCfg >(arena);
}
template<> PROTOBUF_NOINLINE ::Resource::ActivityOpenCfg_ARRAY* Arena::CreateMaybeMessage< ::Resource::ActivityOpenCfg_ARRAY >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Resource::ActivityOpenCfg_ARRAY >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
